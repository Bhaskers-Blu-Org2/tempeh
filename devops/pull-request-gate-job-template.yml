parameters:
  name: ''
  vmImage: ''
  pyVersions: [3.6, 3.7]
  datasets: ["boston_sklearn", "iris_sklearn", "adult_uci", "lawschool_passbar", "lawschool_gpa"]
  models: ["rbm_svm", "decision_tree_classifier"]

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 2
    matrix:
      ${{ each pyVer in parameters.pyVersions }}:
        ${{ each dataset in parameters.datasets }}:
          ${{ each model in parameters.models }}:
            "${{ pyVer }} ${{ dataset }} ${{ model }}":
              PyVer: ${{ pyVer }}
              TEST_DATASET: ${{ dataset }}
              TEST_MODEL: ${{ model }}
              

  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(PyVer)'
    inputs:
      versionSpec: '$(PyVer)' 
      addToPath: true

  - script: pip install -r requirements.txt
    displayName: 'Install required packages'

  - script: flake8 .
    displayName: "Run flake8"

  - script: python -m pytest -s tests/ --junitxml=./TEST--TEST.xml -o junit_suite_name="$(Agent.JobName)"
    displayName: 'Run tests'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/TEST-*.xml'
    condition: succeededOrFailed()